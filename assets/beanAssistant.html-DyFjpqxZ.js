import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as n,o as s}from"./app-Br94FAJx.js";const i="/develop-blog/assets/images/beanAssistant/beanAssistant1.png",o="/develop-blog/assets/images/beanAssistant/beanAssistant2.png",p={};function r(g,e){return s(),a("div",null,e[0]||(e[0]=[n('<p>免费的IDEA生产力插件 <code>Bean Assistant</code>，显示 Spring 项目 Bean 的方法直接写调用插件帮忙 Bean 注入代码的编写</p><figure><img src="'+i+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>前言<br> 不知道你们在平时的工作场景中是否经常遇到以下的情况。在一个方法中，需要调用某个实例接口的方法。我们经常会先在该类里面先注入这个接口的实例 Bean,然后再调用起方法，如果这个类很长，我们需要翻到该类的很前面，先把注入方法写好，然后又返回方法体写调用。这种形式非常繁琐。</p><p>那么今天我们使用 Bean Assitant 就可以很好得解决这个问题，实现Bean 的快速注入，并且可以直接在光标所在行，直接写bean 的方法调用。</p><p>功能<br> 如下示例，接下来我们在 someMethod 中,调用 用了Spring的@Service 注解标记的BookService接口的updateName方法，我们选择带了插件光标的BookService并回车，然后插件就帮我们做好 Bean 的注入代码了，我们就可以直接在里面调用updateName并且输入对于的参数。</p><figure><img src="'+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>自定义<br> 当然了插件并不只支持用Spring系列注解标注的 Bean,我们还可以前往菜单栏 tools 下的Bean Assistant选项，自定义其他框架标注的注解并且需要注入的，例如 Mybatis 的 Mapper 接口，Dubbo 的 DubboService 等接口以及lombok构造器注入。</p>',7)]))}const m=t(p,[["render",r],["__file","beanAssistant.html.vue"]]),d=JSON.parse('{"path":"/idea/ideaPlugin/beanAssistant.html","title":"利用 Bean Assistant 快速注入 Bean","lang":"zh-CN","frontmatter":{"title":"利用 Bean Assistant 快速注入 Bean","icon":"object-group","date":"2024-01-08T00:00:00.000Z","author":{"name":"Kings","url":"https://github.com/kings1990"},"category":["IDEA 插件"],"tag":["IDEA 插件"],"description":"免费的IDEA生产力插件 Bean Assistant，显示 Spring 项目 Bean 的方法直接写调用插件帮忙 Bean 注入代码的编写 前言 不知道你们在平时的工作场景中是否经常遇到以下的情况。在一个方法中，需要调用某个实例接口的方法。我们经常会先在该类里面先注入这个接口的实例 Bean,然后再调用起方法，如果这个类很长，我们需要翻到该类的很前...","head":[["meta",{"property":"og:url","content":"https://kings1990.github.io/develop-blog/develop-blog/idea/ideaPlugin/beanAssistant.html"}],["meta",{"property":"og:site_name","content":"开发者博客"}],["meta",{"property":"og:title","content":"利用 Bean Assistant 快速注入 Bean"}],["meta",{"property":"og:description","content":"免费的IDEA生产力插件 Bean Assistant，显示 Spring 项目 Bean 的方法直接写调用插件帮忙 Bean 注入代码的编写 前言 不知道你们在平时的工作场景中是否经常遇到以下的情况。在一个方法中，需要调用某个实例接口的方法。我们经常会先在该类里面先注入这个接口的实例 Bean,然后再调用起方法，如果这个类很长，我们需要翻到该类的很前..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://kings1990.github.io/develop-blog/develop-blog/assets/images/beanAssistant/beanAssistant1.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-08T06:26:42.000Z"}],["meta",{"property":"article:author","content":"Kings"}],["meta",{"property":"article:tag","content":"IDEA 插件"}],["meta",{"property":"article:published_time","content":"2024-01-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-08T06:26:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"利用 Bean Assistant 快速注入 Bean\\",\\"image\\":[\\"https://kings1990.github.io/develop-blog/develop-blog/assets/images/beanAssistant/beanAssistant1.png\\",\\"https://kings1990.github.io/develop-blog/develop-blog/assets/images/beanAssistant/beanAssistant2.png\\"],\\"datePublished\\":\\"2024-01-08T00:00:00.000Z\\",\\"dateModified\\":\\"2025-01-08T06:26:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Kings\\",\\"url\\":\\"https://github.com/kings1990\\"}]}"]]},"headers":[],"git":{"createdTime":1736317602000,"updatedTime":1736317602000,"contributors":[{"name":"Kings","username":"Kings","email":"963987632@qq.com","commits":1,"url":"https://github.com/Kings"}]},"readingTime":{"minutes":1.37,"words":410},"filePathRelative":"idea/ideaPlugin/beanAssistant.md","localizedDate":"2024年1月8日","excerpt":"<p>免费的IDEA生产力插件 <code>Bean Assistant</code>，显示 Spring 项目 Bean 的方法直接写调用插件帮忙 Bean 注入代码的编写</p>\\n<figure><img src=\\"/assets/images/beanAssistant/beanAssistant1.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<p>前言<br>\\n不知道你们在平时的工作场景中是否经常遇到以下的情况。在一个方法中，需要调用某个实例接口的方法。我们经常会先在该类里面先注入这个接口的实例 Bean,然后再调用起方法，如果这个类很长，我们需要翻到该类的很前面，先把注入方法写好，然后又返回方法体写调用。这种形式非常繁琐。</p>","autoDesc":true}');export{m as comp,d as data};
